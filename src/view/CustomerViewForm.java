/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import control.Confige;
import java.awt.ComponentOrientation;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import java.util.ResourceBundle;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.Customer;
import model.dbAccessor;

/**
 *
 * @author m.j
 */
public class CustomerViewForm extends javax.swing.JFrame {
private List<Customer>customers;
 private ResourceBundle rs=Confige.getConfic().getResourceBundle();

    /**
     * Creates new form CustomerView
     */
    public CustomerViewForm() {
       JPanel p=(JPanel) getContentPane();
        initComponents();
        switch(rs.getLocale().getLanguage()){
            case "en":
                 p.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
                    table.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
                   
                break;
                case"fa":
                    p.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
                    table.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
                    break;
        }
        
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
centerRenderer.setHorizontalAlignment( JLabel.CENTER );
table.setDefaultRenderer(String.class, centerRenderer);
        
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            Dimension frameSize = getSize();
            setLocation(new Point((screenSize.width - frameSize.width) / 2,
                    (screenSize.height - frameSize.width) / 2));
            this.setResizable(false);
            Fname.setText("first name ");
            Lname.setText("last name");
            Addresss.setText("address");
            Tell.setText("tell number");
                DefaultTableModel model=   (DefaultTableModel) table.getModel();
           customers= dbAccessor.GetAccessor().getCustomer("", "", "", "","");
              for (Customer customer : customers) {
                    Vector a=new Vector();
            a.add(customer.getId());
              System.out.print(customer.getId());
              
            a.add(customer.getFName());
            a.add(customer.getLName());
            a.add(customer.getAddress());
            a.add(customer.getTelNo());
            a.add(customer.getSex());
            model.addRow(a);
        }
             table.setAutoCreateRowSorter(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        MaleP = new javax.swing.JRadioButton();
        FMalep = new javax.swing.JRadioButton();
        Allp = new javax.swing.JRadioButton();
        Fname = new javax.swing.JTextField();
        Addresss = new javax.swing.JTextField();
        Lname = new javax.swing.JTextField();
        Tell = new javax.swing.JTextField();
        clearB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(0).setHeaderValue(rs.getString("Code"));
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(1).setHeaderValue(rs.getString("FirstName"));
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(2).setHeaderValue(rs.getString("LastName"));
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(3).setHeaderValue(rs.getString("Address"));
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(4).setHeaderValue(rs.getString("Tell"));
            table.getColumnModel().getColumn(5).setResizable(false);
            table.getColumnModel().getColumn(5).setHeaderValue(rs.getString("Sex"));
        }

        buttonGroup1.add(MaleP);
        MaleP.setText(rs.getString("Male"));
        MaleP.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                MalePStateChanged(evt);
            }
        });
        MaleP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MalePActionPerformed(evt);
            }
        });

        buttonGroup1.add(FMalep);
        FMalep.setText(rs.getString("FeMale"));
        FMalep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FMalepActionPerformed(evt);
            }
        });

        buttonGroup1.add(Allp);
        Allp.setSelected(true);
        Allp.setText(rs.getString("All")
        );
        Allp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllpActionPerformed(evt);
            }
        });

        Fname.setForeground(new java.awt.Color(204, 204, 204));
        Fname.setToolTipText("");
        Fname.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        Fname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FnameFocusLost(evt);
            }
        });
        Fname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FnameMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                FnameMouseExited(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                FnameMouseReleased(evt);
            }
        });
        Fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FnameActionPerformed(evt);
            }
        });
        Fname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FnameKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                FnameKeyTyped(evt);
            }
        });

        Addresss.setForeground(new java.awt.Color(204, 204, 204));
        Addresss.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                AddresssFocusLost(evt);
            }
        });
        Addresss.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddresssMouseClicked(evt);
            }
        });
        Addresss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddresssActionPerformed(evt);
            }
        });
        Addresss.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AddresssKeyTyped(evt);
            }
        });

        Lname.setForeground(new java.awt.Color(204, 204, 204));
        Lname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                LnameFocusLost(evt);
            }
        });
        Lname.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LnameMouseClicked(evt);
            }
        });
        Lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LnameActionPerformed(evt);
            }
        });
        Lname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                LnameKeyTyped(evt);
            }
        });

        Tell.setForeground(new java.awt.Color(204, 204, 204));
        Tell.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                TellFocusLost(evt);
            }
        });
        Tell.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TellMouseClicked(evt);
            }
        });
        Tell.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TellKeyTyped(evt);
            }
        });

        clearB.setText(rs.getString("Clear"));
        clearB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clearB, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Tell, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Addresss, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Lname, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Fname, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Allp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FMalep)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MaleP))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MaleP)
                    .addComponent(FMalep)
                    .addComponent(Allp)
                    .addComponent(Fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Addresss, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        LoginFormS.GetLogin().setEnabled(true);
        
    }//GEN-LAST:event_formWindowClosing

    private void FnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FnameMouseClicked
        // TODO add your handling code here:
        Fname.setText("");
    }//GEN-LAST:event_FnameMouseClicked

    private void FnameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FnameMouseExited
        // TODO add your handling code here:
        
    }//GEN-LAST:event_FnameMouseExited

    private void FnameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FnameMouseReleased
        // TODO add your handling code here:
    
    }//GEN-LAST:event_FnameMouseReleased

    private void FnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FnameFocusLost
        // TODO add your handling code here:
        if(Fname.getText().equals(""))
            Fname.setText("first name ");
    
    }//GEN-LAST:event_FnameFocusLost

    private void AddresssActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddresssActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddresssActionPerformed

    private void LnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LnameActionPerformed

    private void FnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FnameActionPerformed

    private void LnameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LnameMouseClicked
        // TODO add your handling code here:
        Lname.setText("");
    }//GEN-LAST:event_LnameMouseClicked

    private void LnameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LnameFocusLost
        // TODO add your handling code here:
        if(Lname.getText().equals(""))
            Lname.setText("last name");
    
    }//GEN-LAST:event_LnameFocusLost

    private void AddresssMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddresssMouseClicked
        // TODO add your handling code here:
        Addresss.setText("");
    }//GEN-LAST:event_AddresssMouseClicked

    private void AddresssFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_AddresssFocusLost
        // TODO add your handling code here:
        if(Addresss.getText().equals(""))
            Addresss.setText("address");
    
    }//GEN-LAST:event_AddresssFocusLost

    private void TellMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TellMouseClicked
        // TODO add your handling code here:
        Tell.setText("");
    }//GEN-LAST:event_TellMouseClicked

    private void TellFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_TellFocusLost
        // TODO add your handling code here:
        if(Tell.getText().equals(""))
            Tell.setText("tell number");
       
    
    }//GEN-LAST:event_TellFocusLost

    private void clearBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBActionPerformed
        // TODO add your handling code here:
        Fname.setText("first name ");
        Lname.setText("last name");
        Addresss.setText("address");
        Tell.setText("tell number");
        Allp.setSelected(true);
                               String a1;
        String b;
        String c;
        String d;
        String e;
        if(Fname.getText().equals("first name "))
            a1="";
        else
            a1=Fname.getText();
        if(Lname.getText().equals("last name"))
            b="";
        else
            b=Lname.getText();
        if(Addresss.getText().equals("address"))
            c="";
        else
            c=Addresss.getText();
        if(Tell.getText().equals("tell number"))
            d="";
        else
            d=Tell.getText();
           e="";
        
        DefaultTableModel model=   (DefaultTableModel) table.getModel();
        model.setRowCount(0);
         customers.clear();
        customers= dbAccessor.GetAccessor().getCustomer(a1,b, c,d,e);
        
        for (Customer customer : customers) {
                    Vector a=new Vector();
            a.add(customer.getId());
            a.add(customer.getFName());
            a.add(customer.getLName());
            a.add(customer.getAddress());
            a.add(customer.getTelNo());
            a.add(customer.getSex());
            model.addRow(a);
        }
       table.updateUI();

 

       
    }//GEN-LAST:event_clearBActionPerformed

    private void MalePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MalePActionPerformed
        // TODO add your handling code here:
        String a1;
        String b;
        String c;
        String d;
        String e;
        if(Fname.getText().equals("first name "))
            a1="";
        else
            a1=Fname.getText();
        if(Lname.getText().equals("last name"))
            b="";
        else
            b=Lname.getText();
        if(Addresss.getText().equals("address"))
            c="";
        else
            c=Addresss.getText();
        if(Tell.getText().equals("tell number"))
            d="";
        else
            d=Tell.getText();
        e="مذکر";
        
        
        DefaultTableModel model=   (DefaultTableModel) table.getModel();
        model.setRowCount(0);
         customers.clear();
        customers= dbAccessor.GetAccessor().getCustomer(a1,b, c,d,e);
        
        for (Customer customer : customers) {
                    Vector a=new Vector();
            a.add(customer.getId());
            a.add(customer.getFName());
            a.add(customer.getLName());
            a.add(customer.getAddress());
            a.add(customer.getTelNo());
            a.add(customer.getSex());
            model.addRow(a);
        }
       table.updateUI();
    }//GEN-LAST:event_MalePActionPerformed

    private void MalePStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_MalePStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_MalePStateChanged

    private void FMalepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FMalepActionPerformed
 String a1;
        String b;
        String c;
        String d;
        String e;
        if(Fname.getText().equals("first name "))
            a1="";
        else
            a1=Fname.getText();
        if(Lname.getText().equals("last name"))
            b="";
        else
            b=Lname.getText();
        if(Addresss.getText().equals("address"))
            c="";
        else
            c=Addresss.getText();
        if(Tell.getText().equals("tell number"))
            d="";
        else
            d=Tell.getText();
        e="مونث";
        
        
        DefaultTableModel model=   (DefaultTableModel) table.getModel();
        model.setRowCount(0);
         customers.clear();
        customers= dbAccessor.GetAccessor().getCustomer(a1,b, c,d,e);
        
        for (Customer customer : customers) {
                    Vector a=new Vector();
            a.add(customer.getId());
            a.add(customer.getFName());
            a.add(customer.getLName());
            a.add(customer.getAddress());
            a.add(customer.getTelNo());
            a.add(customer.getSex());
            model.addRow(a);
        }
       table.updateUI();
    }//GEN-LAST:event_FMalepActionPerformed

    private void AllpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllpActionPerformed
        // TODO add your handling code here:
 String a1;
        String b;
        String c;
        String d;
        String e;
        if(Fname.getText().equals("first name "))
            a1="";
        else
            a1=Fname.getText();
        if(Lname.getText().equals("last name"))
            b="";
        else
            b=Lname.getText();
        if(Addresss.getText().equals("address"))
            c="";
        else
            c=Addresss.getText();
        if(Tell.getText().equals("tell number"))
            d="";
        else
            d=Tell.getText();
        e="";
        
        
        DefaultTableModel model=   (DefaultTableModel) table.getModel();
        model.setRowCount(0);
         customers.clear();
        customers= dbAccessor.GetAccessor().getCustomer(a1,b, c,d,e);
        
        for (Customer customer : customers) {
                    Vector a=new Vector();
            a.add(customer.getId());
            a.add(customer.getFName());
            a.add(customer.getLName());
            a.add(customer.getAddress());
            a.add(customer.getTelNo());
            a.add(customer.getSex());
            model.addRow(a);
        }
       table.updateUI();        
    }//GEN-LAST:event_AllpActionPerformed

    private void FnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FnameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_FnameKeyPressed

    private void FnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FnameKeyTyped
        // TODO add your handling code here:
                       String a1;
        String b;
        String c;
        String d;
        String e;
        if(Fname.getText().equals("first name "))
            a1="";
        else
            a1=Fname.getText();
        if(Lname.getText().equals("last name"))
            b="";
        else
            b=Lname.getText();
        if(Addresss.getText().equals("address"))
            c="";
        else
            c=Addresss.getText();
        if(Tell.getText().equals("tell number"))
            d="";
        else
            d=Tell.getText();
       if(MaleP.isSelected())
        e="مذکر";
       else if(FMalep.isSelected())
           e="مونث";
       else
           e="";
        
        DefaultTableModel model=   (DefaultTableModel) table.getModel();
        model.setRowCount(0);
         customers.clear();
        customers= dbAccessor.GetAccessor().getCustomer(a1,b, c,d,e);
        
        for (Customer customer : customers) {
                    Vector a=new Vector();
            a.add(customer.getId());
            a.add(customer.getFName());
            a.add(customer.getLName());
            a.add(customer.getAddress());
            a.add(customer.getTelNo());
            a.add(customer.getSex());
            model.addRow(a);
        }
       table.updateUI();

 
    }//GEN-LAST:event_FnameKeyTyped

    private void LnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LnameKeyTyped
        // TODO add your handling code here:
                       String a1;
        String b;
        String c;
        String d;
        String e;
        if(Fname.getText().equals("first name "))
            a1="";
        else
            a1=Fname.getText();
        if(Lname.getText().equals("last name"))
            b="";
        else
            b=Lname.getText();
        if(Addresss.getText().equals("address"))
            c="";
        else
            c=Addresss.getText();
        if(Tell.getText().equals("tell number"))
            d="";
        else
            d=Tell.getText();
       if(MaleP.isSelected())
        e="مذکر";
       else if(FMalep.isSelected())
           e="مونث";
       else
           e="";
        
        DefaultTableModel model=   (DefaultTableModel) table.getModel();
        model.setRowCount(0);
         customers.clear();
        customers= dbAccessor.GetAccessor().getCustomer(a1,b, c,d,e);
        
        for (Customer customer : customers) {
                    Vector a=new Vector();
            a.add(customer.getId());
            a.add(customer.getFName());
            a.add(customer.getLName());
            a.add(customer.getAddress());
            a.add(customer.getTelNo());
            a.add(customer.getSex());
            model.addRow(a);
        }
       table.updateUI();

 
        

    }//GEN-LAST:event_LnameKeyTyped

    private void AddresssKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddresssKeyTyped
        // TODO add your handling code here:
                               String a1;
        String b;
        String c;
        String d;
        String e;
        if(Fname.getText().equals("first name "))
            a1="";
        else
            a1=Fname.getText();
        if(Lname.getText().equals("last name"))
            b="";
        else
            b=Lname.getText();
        if(Addresss.getText().equals("address"))
            c="";
        else
            c=Addresss.getText();
        if(Tell.getText().equals("tell number"))
            d="";
        else
            d=Tell.getText();
       if(MaleP.isSelected())
        e="مذکر";
       else if(FMalep.isSelected())
           e="مونث";
       else
           e="";
        
        DefaultTableModel model=   (DefaultTableModel) table.getModel();
        model.setRowCount(0);
         customers.clear();
        customers= dbAccessor.GetAccessor().getCustomer(a1,b, c,d,e);
        
        for (Customer customer : customers) {
                    Vector a=new Vector();
            a.add(customer.getId());
            a.add(customer.getFName());
            a.add(customer.getLName());
            a.add(customer.getAddress());
            a.add(customer.getTelNo());
            a.add(customer.getSex());
            model.addRow(a);
        }
       table.updateUI();

 

    }//GEN-LAST:event_AddresssKeyTyped

    private void TellKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TellKeyTyped
        // TODO add your handling code here:
                               String a1;
        String b;
        String c;
        String d;
        String e;
        if(Fname.getText().equals("first name "))
            a1="";
        else
            a1=Fname.getText();
        if(Lname.getText().equals("last name"))
            b="";
        else
            b=Lname.getText();
        if(Addresss.getText().equals("address"))
            c="";
        else
            c=Addresss.getText();
        if(Tell.getText().equals("tell number"))
            d="";
        else
            d=Tell.getText();
       if(MaleP.isSelected())
        e="مذکر";
       else if(FMalep.isSelected())
           e="مونث";
       else
           e="";
        
        DefaultTableModel model=   (DefaultTableModel) table.getModel();
        model.setRowCount(0);
         customers.clear();
        customers= dbAccessor.GetAccessor().getCustomer(a1,b, c,d,e);
        
        for (Customer customer : customers) {
                    Vector a=new Vector();
            a.add(customer.getId());
            a.add(customer.getFName());
            a.add(customer.getLName());
            a.add(customer.getAddress());
            a.add(customer.getTelNo());
            a.add(customer.getSex());
            model.addRow(a);
        }
       table.updateUI();

 

    }//GEN-LAST:event_TellKeyTyped

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(CustomerViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(CustomerViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(CustomerViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(CustomerViewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new CustomerViewForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Addresss;
    private javax.swing.JRadioButton Allp;
    private javax.swing.JRadioButton FMalep;
    private javax.swing.JTextField Fname;
    private javax.swing.JTextField Lname;
    private javax.swing.JRadioButton MaleP;
    private javax.swing.JTextField Tell;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
